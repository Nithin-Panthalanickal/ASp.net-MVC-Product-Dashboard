//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProductDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProductDBEntities object using the connection string found in the 'ProductDBEntities' section of the application configuration file.
        /// </summary>
        public ProductDBEntities() : base("name=ProductDBEntities", "ProductDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProductDBEntities object.
        /// </summary>
        public ProductDBEntities(string connectionString) : base(connectionString, "ProductDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProductDBEntities object.
        /// </summary>
        public ProductDBEntities(EntityConnection connection) : base(connection, "ProductDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pid">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> Sp_DeleteProduct(Nullable<global::System.Int32> pid)
        {
            ObjectParameter pidParameter;
            if (pid.HasValue)
            {
                pidParameter = new ObjectParameter("Pid", pid);
            }
            else
            {
                pidParameter = new ObjectParameter("Pid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("Sp_DeleteProduct", pidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemName">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="tax">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> Sp_SaveProduct(global::System.String itemName, global::System.String description, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> quantity, Nullable<global::System.Int32> tax, Nullable<global::System.Int32> status)
        {
            ObjectParameter itemNameParameter;
            if (itemName != null)
            {
                itemNameParameter = new ObjectParameter("ItemName", itemName);
            }
            else
            {
                itemNameParameter = new ObjectParameter("ItemName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter taxParameter;
            if (tax.HasValue)
            {
                taxParameter = new ObjectParameter("Tax", tax);
            }
            else
            {
                taxParameter = new ObjectParameter("Tax", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status.HasValue)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("Sp_SaveProduct", itemNameParameter, descriptionParameter, priceParameter, quantityParameter, taxParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemId">No Metadata Documentation available.</param>
        /// <param name="itemName">No Metadata Documentation available.</param>
        /// <param name="descriptions">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="tax">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> Sp_UpdateProductDtls(Nullable<global::System.Int32> itemId, global::System.String itemName, global::System.String descriptions, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> quantity, Nullable<global::System.Int32> tax)
        {
            ObjectParameter itemIdParameter;
            if (itemId.HasValue)
            {
                itemIdParameter = new ObjectParameter("ItemId", itemId);
            }
            else
            {
                itemIdParameter = new ObjectParameter("ItemId", typeof(global::System.Int32));
            }
    
            ObjectParameter itemNameParameter;
            if (itemName != null)
            {
                itemNameParameter = new ObjectParameter("ItemName", itemName);
            }
            else
            {
                itemNameParameter = new ObjectParameter("ItemName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionsParameter;
            if (descriptions != null)
            {
                descriptionsParameter = new ObjectParameter("Descriptions", descriptions);
            }
            else
            {
                descriptionsParameter = new ObjectParameter("Descriptions", typeof(global::System.String));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter taxParameter;
            if (tax.HasValue)
            {
                taxParameter = new ObjectParameter("Tax", tax);
            }
            else
            {
                taxParameter = new ObjectParameter("Tax", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("Sp_UpdateProductDtls", itemIdParameter, itemNameParameter, descriptionsParameter, priceParameter, quantityParameter, taxParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Sp_GetProductDetails_Result> Sp_GetProductDetails()
        {
            return base.ExecuteFunction<Sp_GetProductDetails_Result>("Sp_GetProductDetails");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDBModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static Product CreateProduct(global::System.Int32 itemId)
        {
            Product product = new Product();
            product.ItemId = itemId;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descriptions
        {
            get
            {
                return _Descriptions;
            }
            set
            {
                OnDescriptionsChanging(value);
                ReportPropertyChanging("Descriptions");
                _Descriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descriptions");
                OnDescriptionsChanged();
            }
        }
        private global::System.String _Descriptions;
        partial void OnDescriptionsChanging(global::System.String value);
        partial void OnDescriptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tax
        {
            get
            {
                return _Tax;
            }
            set
            {
                OnTaxChanging(value);
                ReportPropertyChanging("Tax");
                _Tax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tax");
                OnTaxChanged();
            }
        }
        private Nullable<global::System.Int32> _Tax;
        partial void OnTaxChanging(Nullable<global::System.Int32> value);
        partial void OnTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ProductDBModel", Name="Sp_GetProductDetails_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Sp_GetProductDetails_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sp_GetProductDetails_Result object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static Sp_GetProductDetails_Result CreateSp_GetProductDetails_Result(global::System.Int32 itemId)
        {
            Sp_GetProductDetails_Result sp_GetProductDetails_Result = new Sp_GetProductDetails_Result();
            sp_GetProductDetails_Result.ItemId = itemId;
            return sp_GetProductDetails_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descriptions
        {
            get
            {
                return _Descriptions;
            }
            set
            {
                OnDescriptionsChanging(value);
                ReportPropertyChanging("Descriptions");
                _Descriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descriptions");
                OnDescriptionsChanged();
            }
        }
        private global::System.String _Descriptions;
        partial void OnDescriptionsChanging(global::System.String value);
        partial void OnDescriptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tax
        {
            get
            {
                return _Tax;
            }
            set
            {
                OnTaxChanging(value);
                ReportPropertyChanging("Tax");
                _Tax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tax");
                OnTaxChanged();
            }
        }
        private Nullable<global::System.Int32> _Tax;
        partial void OnTaxChanging(Nullable<global::System.Int32> value);
        partial void OnTaxChanged();

        #endregion

    }

    #endregion

    
}
